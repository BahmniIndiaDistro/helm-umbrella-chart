name: Deploy to dev environment

on:
  push:
    branches: 
      - secure-ingress
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: bahmni-cluster-dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Helm Dependency Update
        run: helm dependency update
      - name: Merge Values
        run: |
          yq eval-all '. as $item ireduce ({}; . * $item )' \
          values/dev.yaml \
          values/openmrs/dev.yaml \
          values/bahmni-lab/dev.yaml \
          values/bahmni-web/dev.yaml \
          > values.yaml
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BAHMNI_AWS_ID }}
          aws-secret-access-key: ${{ secrets.BAHMNI_AWS_SECRET }}
          aws-region: ${{ secrets.BAHMNI_AWS_REGION }}
          role-to-assume: ${{ secrets.BAHMNI_INFRA_ADMIN_ROLE }}
          role-duration-seconds: 900 # 15 mins
          role-session-name: BahmniInfraAdminSession
      - name: Authorise Kubectl with EKS
        run: aws eks update-kubeconfig --name $CLUSTER_NAME
      - name: Install Nginx Ingress
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.2/deploy/static/provider/aws/deploy.yaml
      - name: Upsert Route53 A record with INGRESS_DNS
        run: |
          INGRESS_DNS=$(kubectl -n ingress-nginx  get svc ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].hostname}")
          jq --arg ingress_dns "$INGRESS_DNS" '.Changes[0].ResourceRecordSet.AliasTarget.DNSName = $ingress_dns' aws/route53/lite.mybahmni.in.json > recordset
          aws route53 change-resource-record-sets --hosted-zone-id ${{ secrets.HOSTED_ZONE_ID }} --change-batch file://recordset
      - name: Helm Upgrade
        run: |
          RDS_USERNAME=$(aws ssm get-parameter --with-decryption --name "/dev/rds/mysql/username" --query "Parameter.Value" --output text)
          RDS_PASSWORD=$(aws ssm get-parameter --with-decryption --name "/dev/rds/mysql/password" --query "Parameter.Value" --output text)
          RDS_HOST=$(aws ssm get-parameter --with-decryption --name "/dev/rds/mysql/host" --query "Parameter.Value" --output text)
          helm upgrade bahmni-dev . \
          --set bahmni-openmrs.secrets.DB_ROOT_USERNAME=$RDS_USERNAME \
          --set bahmni-openmrs.secrets.DB_ROOT_PASSWORD=$RDS_PASSWORD \
          --set bahmni-openmrs.secrets.DB_USERNAME=$RDS_USERNAME \
          --set bahmni-openmrs.secrets.DB_PASSWORD=$RDS_PASSWORD \
          --set bahmni-openmrs.secrets.DB_HOST=$RDS_HOST \
          --set ingress.host=lite.eks.mybahmni.in \
          --install
  notification:
    name: Slack notification
    needs:
      - deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Success
        if: ${{ needs.deploy.result == 'success' }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":">ðŸŸ¢ Bahmni India Distro deployed on https://lite.mybahmni.in \n> <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|Umbrella Chart Job #${{github.run_id}}>"}' ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Failure
        if: ${{ needs.deploy.result == 'failure' }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"ðŸ”´ Bahmni India Distro deployment failed!!! This is where you go look what happened â†’ <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|Umbrella Chart Job #${{github.run_id}}>"}' ${{ secrets.SLACK_WEBHOOK_URL }}
